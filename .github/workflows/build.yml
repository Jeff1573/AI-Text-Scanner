name: Build and Release

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
            platform: win

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Lint code
        run: npm run lint
        continue-on-error: true

      # 构建应用包 (仅在推送标签或主分支时)
      - name: Package application
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
        run: npm run package:win
        env:
          # 禁用代码签名 (CI环境)
          CSC_IDENTITY_AUTO_DISCOVERY: false
          # Windows
          WIN_CSC_LINK: ${{ secrets.WIN_CSC_LINK }}
          WIN_CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}
          # macOS
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}

      # 上传构建产物
      - name: Upload build artifacts
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.platform }}
          path: |
            dist/**/*
            !dist/mac-universal
            !dist/*.blockmap
          retention-days: 7

  # 发布到GitHub Releases (仅在标签推送时)
  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci



      - name: Get tag information and generate changelog
        id: tag_info
        run: |
          tag="${{ github.ref_name }}"
          tagMessage=$(git tag -l --format='%(contents)' "$tag" 2>/dev/null || echo "")
          
          if [ -z "$tagMessage" ]; then
            tagMessage="Release $tag"
          fi
          
          # 获取上一个tag
          previousTag=$(git describe --tags --abbrev=0 "$tag"^ 2>/dev/null || echo "")
          
          # 生成更新日志
          changelog="## 📋 更新内容\n\n"
          changelog+="$tagMessage\n\n"
          changelog+="## 🔄 代码变更\n\n"
          
          if [ -n "$previousTag" ]; then
            commits=$(git log --pretty=format:"- %s" "$previousTag..$tag" 2>/dev/null || echo "")
            if [ -n "$commits" ]; then
              changelog+="$commits"
            else
              changelog+="- 初始版本发布"
            fi
            changelog+="\n\n## 📊 完整变更日志\n\n[查看完整变更记录](https://github.com/${{ github.repository }}/compare/$previousTag...$tag)"
          else
            changelog+="- 初始版本发布\n\n"
          fi
          
          # 将内容写入文件
          echo -e "$changelog" > release_notes.md
          echo "PREVIOUS_TAG=$previousTag" >> $GITHUB_OUTPUT

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: app-win
          path: artifacts/windows/

      - name: Build and publish
        run: npm run publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Create Release with changelog
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/*
          body_path: release_notes.md
          draft: false
          prerelease: false
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on release
        run: |
          echo "🎉 Release created successfully!"
          echo "Download links are available in the release section."

  # 安全扫描
  security:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level high
        continue-on-error: true

      - name: Check for vulnerabilities
        run: |
          npm audit --json > audit-results.json || true
          if [ -s audit-results.json ]; then
            echo "Security vulnerabilities found:"
            cat audit-results.json
          fi

